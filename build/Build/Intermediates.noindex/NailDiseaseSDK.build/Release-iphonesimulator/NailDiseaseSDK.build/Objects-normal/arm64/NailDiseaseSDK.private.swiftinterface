// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target arm64-apple-ios18.2-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name NailDiseaseSDK
import Combine
import Foundation
@_exported import NailDiseaseSDK
import Swift
import TensorFlowLite
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_hasMissingDesignatedInitializers public class TFLiteImageProcessor {
  public static func resize(_ image: UIKit.UIImage, to size: CoreFoundation.CGSize) -> UIKit.UIImage?
  public static func convertToBuffer(_ image: UIKit.UIImage) -> Foundation.Data?
  public static func preprocessImage(_ image: UIKit.UIImage) -> Foundation.Data?
  @objc deinit
}
@_hasMissingDesignatedInitializers public class TFLiteTest {
  public static func testPrint()
  @objc deinit
}
public class TFLiteModelHandler : Foundation.ObservableObject {
  @Combine.Published @_projectedValueProperty($inferenceResult) public var inferenceResult: [Swift.Float] {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    _modify
  }
  public var $inferenceResult: Combine.Published<[Swift.Float]>.Publisher {
    get
    @available(iOS 14.0, tvOS 14.0, watchOS 7.0, macOS 11.0, *)
    set
  }
  public init(modelName: Swift.String)
  public func runInference(inputData: Foundation.Data)
  public func getInferenceLabel() -> Swift.String
  public typealias ObjectWillChangePublisher = Combine.ObservableObjectPublisher
  @objc deinit
}
