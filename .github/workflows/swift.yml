name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Select Xcode 16.2
        run: sudo xcode-select -switch /Applications/Xcode_16.2.app/Contents/Developer

      - name: Install CocoaPods
        run: pod install --repo-update
        working-directory: ${{ github.workspace }}

      - name: Build `.xcframework` (iOS Only)
        run: |
          echo "üöÄ Starting Build for NailDiseaseSDK.xcframework..."

          # Define Build Paths
          BUILD_DIR="${{ github.workspace }}/build"
          XCFRAMEWORK_PATH="${BUILD_DIR}/NailDiseaseSDK.xcframework"
          ZIP_FILE="${BUILD_DIR}/NailDiseaseSDK.xcframework.zip"

          # Clean previous builds
          echo "üßπ Cleaning previous build artifacts..."
          rm -rf "${BUILD_DIR}" "${XCFRAMEWORK_PATH}" "${ZIP_FILE}"

          # Build for iOS (Devices)
          echo "üì± Building for iOS devices..."
          xcodebuild build \
            -workspace NailDiseaseSDK.xcworkspace \
            -scheme NailDiseaseSDK \
            -destination "generic/platform=iOS" \
            -configuration Release \
            -sdk iphoneos \
            -derivedDataPath "${BUILD_DIR}"

          # Build for iOS Simulator
          echo "üñ•Ô∏è Building for iOS Simulator..."
          xcodebuild build \
            -workspace NailDiseaseSDK.xcworkspace \
            -scheme NailDiseaseSDK \
            -destination "generic/platform=iOS Simulator" \
            -configuration Release \
            -sdk iphonesimulator \
            -derivedDataPath "${BUILD_DIR}"

          # Find correct framework paths
          IOS_FRAMEWORK_PATH="${BUILD_DIR}/Build/Products/Release-iphoneos/NailDiseaseSDK.framework"
          SIMULATOR_FRAMEWORK_PATH="${BUILD_DIR}/Build/Products/Release-iphonesimulator/NailDiseaseSDK.framework"

          # Verify paths before proceeding
          if [[ ! -d "$IOS_FRAMEWORK_PATH" || ! -d "$SIMULATOR_FRAMEWORK_PATH" ]]; then
              echo "‚ùå ERROR: Frameworks not found in expected locations!"
              echo "Check your build output using: find ${BUILD_DIR} -name 'NailDiseaseSDK.framework'"
              exit 1
          fi

          # Create .xcframework in the build directory
          echo "üîó Creating .xcframework..."
          xcodebuild -create-xcframework \
            -framework "$IOS_FRAMEWORK_PATH" \
            -framework "$SIMULATOR_FRAMEWORK_PATH" \
            -output "$XCFRAMEWORK_PATH"

          # Verify the exported .xcframework
          echo "üìÇ Verifying .xcframework structure..."
          ls -R "$XCFRAMEWORK_PATH"

          # Zip the .xcframework in the correct directory
          echo "üì¶ Zipping the .xcframework..."
          cd "$BUILD_DIR"
          zip -r "NailDiseaseSDK.xcframework.zip" "NailDiseaseSDK.xcframework"
          cd ..

          # Verify ZIP file exists before upload
          if [[ ! -f "$ZIP_FILE" ]]; then
              echo "‚ùå ERROR: ZIP file not found!"
              exit 1
          fi

          echo "‚úÖ Build complete! Your .xcframework is ready: $ZIP_FILE"

        working-directory: ${{ github.workspace }}

      - name: Upload `.xcframework` as an Artifact
        uses: actions/upload-artifact@v4
        with:
          name: NailDiseaseSDK.xcframework.zip
          path: ${{ github.workspace }}/build/NailDiseaseSDK.xcframework.zip
